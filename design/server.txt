Main
	+runServer(port)

Database
	constructor(filePath)
	+database
	+select(sql) : list
	+run(sql)

Managers
	// creates all managers and database
	constructor(database)
	+loginManager
	+cookieManager
	+executionManager

RequestHandler:interface
	constructor(managers, cookie)
	+managers
	+handleRequest(request, response)
	// gets function to run (login, signup...)
	+getHandler(request) : handlerFunction

LoginHandler
	+requests <path - handlerFunction>
	constructor(managers, cookie)
	-login(name, password) : RequestResult
	-signup(name, password) : RequestResult

MenuHandler
	+requests <path - handlerFunction>
	+userId
	constructor(managers, cookie, userId)
	// subs and points count
	-getUserInfo(userId)
	-getUserPosts(userId, previousIDs, filter)
	-getGlobalPosts(previousIDs, filter)
	// comments for post or another comment
	-getComments(parentId, lastId, filter)

	-post(title, content)
	-removePost(postId)
	-comment(postId, content)
	-removeComment(commentId)
	-like(globalId, value)
	-subscribe(userId)

	-logout()
	-deleteUser(password)

ChallengeHandler
	+requests <path - handlerFunction>
	constructor(managers, cookie, userId, challengeId)
	-todo...

CookieManager
	+object <cookie - RequestHandler>
	// checks if cookie is valid
	+checkCookie(cookie) : bool
	// creates cookie and loginHandler
	+addCookie() : cookie
	// stops session and deletes cookie
	+removeCookie(cookie)
	// resets connection to home page
	-resetState(cookie)
	// returns current RequestHandler
	+getHandler(cookie) : RequestHandler

LoginManager
	constructor(database)
	+Database
	+addUser(name, password)
	+removeUser(name)
	+loginValid(name, password) : bool
	+userExists(name) : bool
	+deleteUser(password)

ExecutionManager
	constructor(database)
	-test(code, challengeId)

MenuManager
	+database
	+constructor(database)
	+addPost(authorId, title, content)
	+removePost(postId)
	+addComment(authorId, parentId, content)
	+removeComment(commentId)
	+subscribe(srcId, dstId)
	+like(userId, globalId, value)

_RequestResult_
	constructor(jsonResponse, newHandler)
	+jsonResposne
	+newHandler

Main --<> Managers

Managers --<> LoginManager
Managers --<> CookieManager
Managers --<> ExecutionManager
Managers --<> MenuManager
LoginManager --<> Database
MenuManager --<> Database

CookieManager --<> RequestHandler

RequestHandler --<> _RequestResult_

LoginHandler <-- RequestHandler
MenuHandler <-- RequestHandler
ChallengeHandler <-- RequestHandler
